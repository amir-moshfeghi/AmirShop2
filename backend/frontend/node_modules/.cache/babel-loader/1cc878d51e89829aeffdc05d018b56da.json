{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { cartReducers } from \"./reducers/cartReducers\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducers,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer\n});\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst midlleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...midlleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Amir/Documents/AmirShop2/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","cartReducers","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","userInfo","midlleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,qBAAR,EAA+BC,kBAA/B,QAAwD,4BAAxD;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,mBAHJ,EAIIC,wBAJJ,QAKO,yBALP;AAOA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,WAAW,EAACP,kBADgB;AAE5BQ,EAAAA,cAAc,EAACT,qBAFa;AAG5BU,EAAAA,IAAI,EAACR,YAHuB;AAI5BS,EAAAA,SAAS,EAACP,gBAJkB;AAK5BQ,EAAAA,YAAY,EAACP,mBALe;AAM5BQ,EAAAA,WAAW,EAAGV,kBANc;AAO5BW,EAAAA,iBAAiB,EAAER;AAPS,CAAD,CAA/B;AASA,MAAMS,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADwB,GACwB,EADpD;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD+B,GACgB,IADnD;AAGA,MAAMK,YAAY,GAAG;AACjBZ,EAAAA,IAAI,EAAC;AAACa,IAAAA,SAAS,EAAER;AAAZ,GADY;AAEjBJ,EAAAA,SAAS,EAAC;AAACa,IAAAA,QAAQ,EAACJ;AAAV;AAFO,CAArB;AAIA,MAAMK,UAAU,GAAG,CAAC3B,KAAD,CAAnB;AACA,MAAM4B,KAAK,GAAG/B,WAAW,CAACY,OAAD,EAASe,YAAT,EAAsBvB,mBAAmB,CAACF,eAAe,CAAC,GAAG4B,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {productDetailsReducer, productListReducer} from './reducers/productReducers'\r\nimport {cartReducers} from \"./reducers/cartReducers\";\r\nimport {\r\n    userDetailsReducer,\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userUpdateProfileReducer\r\n} from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducers,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n})\r\nconst cartItemFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst initialState = {\r\n    cart:{cartItems: cartItemFromStorage},\r\n    userLogin:{userInfo:userInfoFromStorage}\r\n}\r\nconst midlleware = [thunk]\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...midlleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}