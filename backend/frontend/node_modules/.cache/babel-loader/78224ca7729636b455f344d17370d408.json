{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { cartReducers } from \"./reducers/cartReducers\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducers,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer\n});\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst midlleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...midlleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Amir/Documents/AmirShop2/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","cartReducers","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","midlleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,qBAAR,EAA+BC,kBAA/B,QAAwD,4BAAxD;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,mBAHJ,EAIIC,wBAJJ,QAKO,yBALP;AAMA,SAAQC,kBAAR,QAAiC,0BAAjC;AAEA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,WAAW,EAACR,kBADgB;AAE5BS,EAAAA,cAAc,EAACV,qBAFa;AAG5BW,EAAAA,IAAI,EAACT,YAHuB;AAI5BU,EAAAA,SAAS,EAACR,gBAJkB;AAK5BS,EAAAA,YAAY,EAACR,mBALe;AAM5BS,EAAAA,WAAW,EAAGX,kBANc;AAO5BY,EAAAA,iBAAiB,EAAET,wBAPS;AAQ5BU,EAAAA,WAAW,EAACT;AARgB,CAAD,CAA/B;AAUA,MAAMU,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADwB,GACwB,EADpD;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACuB,EAD1D;AAGA,MAAMK,YAAY,GAAG;AACjBb,EAAAA,IAAI,EAAC;AAACc,IAAAA,SAAS,EAAER,mBAAZ;AACLS,IAAAA,eAAe,EAACH;AADX,GADY;AAIjBX,EAAAA,SAAS,EAAC;AAACe,IAAAA,QAAQ,EAACL;AAAV;AAJO,CAArB;AAMA,MAAMM,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AACA,MAAM+B,KAAK,GAAGlC,WAAW,CAACa,OAAD,EAASgB,YAAT,EAAsBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {productDetailsReducer, productListReducer} from './reducers/productReducers'\r\nimport {cartReducers} from \"./reducers/cartReducers\";\r\nimport {\r\n    userDetailsReducer,\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userUpdateProfileReducer\r\n} from \"./reducers/userReducers\";\r\nimport {orderCreateReducer} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducers,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate:orderCreateReducer,\r\n})\r\nconst cartItemFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart:{cartItems: cartItemFromStorage,\r\n    shippingAddress:shippingAddressFromStorage\r\n    },\r\n    userLogin:{userInfo:userInfoFromStorage}\r\n}\r\nconst midlleware = [thunk]\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...midlleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}