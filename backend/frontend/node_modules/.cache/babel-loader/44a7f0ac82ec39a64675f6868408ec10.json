{"ast":null,"code":"import { PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logOut = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Amir/Documents/AmirShop2/frontend/src/actions/userActions.js"],"names":["PRODUCT_DETAILS_FAIL","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","register","name","logOut","removeItem","getUserDetails","id","getState","userLogin","userInfo","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import {PRODUCT_DETAILS_FAIL} from \"../constants/productConstants\";\r\nimport {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email,password) => async (dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers :{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post('/api/users/login/',{'username':email,'password':password},config)\r\n        dispatch({type:USER_LOGIN_SUCCESS,payload:data})\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }\r\n    catch (error){\r\ndispatch({\r\n    type:USER_LOGIN_FAIL,payload:error.response && error.response.data.detail? error.response.data.detail:error.message,\r\n})\r\n    }\r\n}\r\n\r\nexport const register = (name,email,password) => async (dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers :{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post('/api/users/register/',{'name':name,'email':email,'password':password},config)\r\n        dispatch({type:USER_REGISTER_SUCCESS,payload:data})\r\n        dispatch({type:USER_LOGIN_SUCCESS,payload:data})\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,payload:error.response && error.response.data.detail? error.response.data.detail:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logOut =()=>(dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n}\r\nexport const getUserDetails = (id) => async (dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n        const config = {\r\n            headers :{\r\n                'Content-type':'application/json',\r\n                'Authorization' : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(`/api/users/${id}/`,config)\r\n        dispatch({type:USER_DETAILS_SUCCESS,payload:data})\r\n\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,payload:error.response && error.response.data.detail? error.response.data.detail:error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n        const config = {\r\n            headers :{\r\n                'Content-type':'application/json',\r\n                'Authorization' : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(`/api/users/profile/update/`,user,config)\r\n        dispatch({type:USER_UPDATE_PROFILE_SUCCESS,payload:data})\r\n        dispatch({type:USER_LOGIN_SUCCESS,payload:data})\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,payload:error.response && error.response.data.detail? error.response.data.detail:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}