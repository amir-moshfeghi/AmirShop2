{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amir\\\\Documents\\\\AmirShop2\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FormContainer from \"../components/FormContainer\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, register } from \"../actions/userActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen({\n  history\n}) {\n  _s();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const {\n    userInfo\n  } = userLogin;\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (userInfo) {\n      history.push();\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage('password do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"bbw3Iod2i8baWNwgVFfslW2EBj4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Amir/Documents/AmirShop2/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","FormContainer","Button","Col","Form","Row","Link","useDispatch","useSelector","login","register","Message","Loader","ProfileScreen","history","userLogin","state","userDetails","loading","error","user","userInfo","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","push","submitHandler","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,GAA3B,QAAqC,iBAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AAAA;;AAC9B,QAAMC,SAAS,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AAGA,QAAME,WAAW,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA/B;AACA,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,MAAuBH,WAA7B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAaN,SAAnB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4B,eAAD,EAAkBC,kBAAlB,IAAwC7B,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMgC,QAAQ,GAAGzB,WAAW,EAA5B;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGsB,QAAH,EAAY;AACRP,MAAAA,OAAO,CAACmB,IAAR;AACH;AAEJ,GALQ,EAKN,CAACnB,OAAD,EAASO,QAAT,CALM,CAAT;;AAOA,QAAMa,aAAa,GAAEC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIV,QAAQ,IAAIE,eAAhB,EAAgC;AAC5BG,MAAAA,UAAU,CAAC,uBAAD,CAAV;AAEH,KAHD,MAIK;AACDC,MAAAA,QAAQ,CAACtB,QAAQ,CAACc,IAAD,EAAMF,KAAN,EAAYI,QAAZ,CAAT,CAAR;AACH;AAEJ,GAVD;;AAWA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA5CQb,a;UACaL,W,EAGEA,W,EAQHD,W;;;KAZZM,a;AA8CT,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, register} from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n\r\nfunction ProfileScreen({history}) {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {loading,error,user} = userDetails\r\n    const {userInfo} = userLogin\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push()\r\n        }\r\n\r\n    }, [history,userInfo]);\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if (password != confirmPassword){\r\n            setMessage('password do not match')\r\n\r\n        }\r\n        else {\r\n            dispatch(register(name,email,password))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}