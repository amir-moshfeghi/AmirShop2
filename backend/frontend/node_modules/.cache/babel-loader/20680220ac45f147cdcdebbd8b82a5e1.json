{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amir\\\\Documents\\\\AmirShop2\\\\frontend\\\\src\\\\screens\\\\PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FormContainer from \"../components/FormContainer\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, register } from \"../actions/userActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport CheckoutSteps from \"../components/checkoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentScreen({\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!shippingAddress.address) {\n    history.push('/shipping');\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('placeorder');\n  };\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"PayPal or Credit Card\",\n            id: \"paypal\",\n            name: \"paymentMethod\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentScreen, \"qC/BqOPtyv20zf0zw1qFSh5zBGE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["C:/Users/Amir/Documents/AmirShop2/frontend/src/screens/PaymentScreen.js"],"names":["React","useEffect","useState","FormContainer","Button","Col","Form","Row","Link","useDispatch","useSelector","login","register","Message","Loader","CheckoutSteps","savePaymentMethod","PaymentScreen","history","dispatch","cart","state","shippingAddress","address","push","submitHandler","e","preventDefault","paymentMethod","setPaymentMethod","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,GAA3B,QAAqC,iBAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,iBAAR,QAAgC,wBAAhC;;;AAGA,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AAAA;;AAC9B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAoBF,IAA1B;;AACA,MAAG,CAACE,eAAe,CAACC,OAApB,EAA4B;AACxBL,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACH;;AACD,QAAMC,aAAa,GAAIC,CAAD,IAAK;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,QAAQ,CAACH,iBAAiB,CAACY,aAAD,CAAlB,CAAR;AACAV,IAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACH,GAJD;;AAKA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,QAAD,CAAlD;AACA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEuB,aAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,KAAK,EAAC,uBAA/B;AAAuD,YAAA,EAAE,EAAC,QAA1D;AAAmE,YAAA,IAAI,EAAC,eAAxE;AAAwF,YAAA,OAAO,MAA/F;AAAgG,YAAA,QAAQ,EAAGC,CAAD,IAAKG,gBAAgB,CAACH,CAAC,CAACI,MAAF,CAASC,KAAV;AAA/H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAlCQd,a;UACYR,W,EACJC,W;;;KAFRO,a;AAoCT,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, register} from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport {savePaymentMethod} from \"../actions/cartActions\";\r\n\r\n\r\nfunction PaymentScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('placeorder')\r\n    }\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='paypal' name='paymentMethod' checked onChange={(e)=>setPaymentMethod(e.target.value)}>\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;"]},"metadata":{},"sourceType":"module"}