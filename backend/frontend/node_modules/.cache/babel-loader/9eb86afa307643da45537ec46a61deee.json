{"ast":null,"code":"import _slicedToArray from\"C:/Users/Amir/Documents/AmirShop2/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import FormContainer from\"../components/FormContainer\";import{Button,Col,Form,Row}from\"react-bootstrap\";import{Link}from'react-router-dom';import{useDispatch,useSelector}from\"react-redux\";import{login,register}from\"../actions/userActions\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import CheckoutSteps from\"../components/checkoutSteps\";import{savePaymentMethod}from\"../actions/cartActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PaymentScreen(_ref){var history=_ref.history;var dispatch=useDispatch();var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress.address){history.push('/shipping');}var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('placeorder');};var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"paypal\",name:\"paymentMethod\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});}export default PaymentScreen;","map":{"version":3,"sources":["C:/Users/Amir/Documents/AmirShop2/backend/frontend/src/screens/PaymentScreen.js"],"names":["React","useEffect","useState","FormContainer","Button","Col","Form","Row","Link","useDispatch","useSelector","login","register","Message","Loader","CheckoutSteps","savePaymentMethod","PaymentScreen","history","dispatch","cart","state","shippingAddress","address","push","submitHandler","e","preventDefault","paymentMethod","setPaymentMethod","target","value"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAAQC,MAAR,CAAgBC,GAAhB,CAAqBC,IAArB,CAA2BC,GAA3B,KAAqC,iBAArC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,KAAR,CAAeC,QAAf,KAA8B,wBAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAAQC,iBAAR,KAAgC,wBAAhC,C,wFAGA,QAASC,CAAAA,aAAT,MAAkC,IAAVC,CAAAA,OAAU,MAAVA,OAAU,CAC9B,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,IAAI,CAAGV,WAAW,CAAC,SAAAW,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CACA,GAAOE,CAAAA,eAAP,CAA0BF,IAA1B,CAAOE,eAAP,CACA,GAAG,CAACA,eAAe,CAACC,OAApB,CAA4B,CACxBL,OAAO,CAACM,IAAR,CAAa,WAAb,EACH,CACD,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAK,CACvBA,CAAC,CAACC,cAAF,GACAR,QAAQ,CAACH,iBAAiB,CAACY,aAAD,CAAlB,CAAR,CACAV,OAAO,CAACM,IAAR,CAAa,YAAb,EACH,CAJD,CAKA,cAA0CtB,QAAQ,CAAC,QAAD,CAAlD,wCAAO0B,aAAP,eAAsBC,gBAAtB,eACA,mBACI,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,MAAC,IAAD,EAAM,QAAQ,CAAEJ,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAEI,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAC,uBAA/B,CAAuD,EAAE,CAAC,QAA1D,CAAmE,IAAI,CAAC,eAAxE,CAAwF,OAAO,KAA/F,CAAgG,QAAQ,CAAE,kBAACC,CAAD,QAAKG,CAAAA,gBAAgB,CAACH,CAAC,CAACI,MAAF,CAASC,KAAV,CAArB,EAA1G,EADJ,EAFJ,GADJ,cASI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBATJ,GAFJ,GADJ,CAqBH,CAED,cAAed,CAAAA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, register} from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport {savePaymentMethod} from \"../actions/cartActions\";\r\n\r\n\r\nfunction PaymentScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('placeorder')\r\n    }\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='paypal' name='paymentMethod' checked onChange={(e)=>setPaymentMethod(e.target.value)}>\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;"]},"metadata":{},"sourceType":"module"}