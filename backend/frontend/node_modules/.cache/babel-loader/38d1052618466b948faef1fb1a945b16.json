{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amir\\\\Documents\\\\AmirShop2\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FormContainer from \"../components/FormContainer\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetails, login, register, updateUserProfile } from \"../actions/userActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen({\n  history\n}) {\n  _s();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const {\n    userInfo\n  } = userLogin;\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage('password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: 'name',\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: 'email',\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: 'password',\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: 'passwordConfirm',\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"confirm password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"Rx5SKgnCW3MPdfJ63NZHxs1hQcE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Amir/Documents/AmirShop2/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","FormContainer","Button","Col","Form","Row","Link","useDispatch","useSelector","getUserDetails","login","register","updateUserProfile","Message","Loader","ProfileScreen","history","userLogin","state","userUpdateProfile","success","userDetails","loading","error","user","userInfo","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","push","submitHandler","e","preventDefault","_id","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getUserDetails, login, register, updateUserProfile} from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n\r\nfunction ProfileScreen({history}) {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {loading,error,user} = userDetails\r\n    const {userInfo} = userLogin\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else {\r\n            if(!user || !user.name){\r\n                dispatch(getUserDetails('profile'))\r\n\r\n            }\r\n            else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n\r\n    }, [dispatch,history,userInfo,user,success]);\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if (password != confirmPassword){\r\n            setMessage('password do not match')\r\n\r\n        }\r\n        else {\r\n            dispatch(updateUserProfile({'id':user._id,'name':name,'email':email,'password':password}))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId={'name'}>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='enter name' value={name} onChange={(e)=>setName(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId={'email'}>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='enter email' value={email} onChange={(e)=>setEmail(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId={'password'}>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='enter password' value={password} onChange={(e)=>setPassword(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId={'passwordConfirm'}>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='confirm password' value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>update</Button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Form>\r\n\r\n\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}